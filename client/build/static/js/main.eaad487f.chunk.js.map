{"version":3,"sources":["images sync /^/.*$","images/ADLs.png","images/HIPAA.jpg","images/backSafety.jpg","images/footCare.jpg","images/handHygiene.jpg","images/infectionControl.jpg","images/nutrition.jpg","images/oralHygiene.jpg","images/preventingFalls.jpg","images/safeTransfers.jpg","components/Container/index.js","components/Col/index.js","components/Row/index.js","services/logService.js","services/httpService.js","services/userService.js","services/authService.js","pages/Signup/signup.js","pages/Login/login.js","constants/materials.js","services/testService.js","pages/Test/test.jsx","components/Greeting/greeting.js","pages/TestList/testListMdb.js","components/Navbar/navbar.js","pages/TestLanding/testLanding.jsx","pages/TestView/testView.jsx","components/Footer/footer.js","components/Wrapper/index.js","components/Logout/logout.jsx","App.js","serviceWorker.js","index.js","images/sembraCareLogoTransparent1.png"],"names":["map","./ADLs.png","./HIPAA.jpg","./backSafety.jpg","./footCare.jpg","./handHygiene.jpg","./infectionControl.jpg","./nutrition.jpg","./oralHygiene.jpg","./preventingFalls.jpg","./safeTransfers.jpg","./sembraCareLogoTransparent1.png","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","Container","props","react_default","a","createElement","assign","className","concat","fluid","Col","size","split","join","Row","logService","init","log","error","console","axios","interceptors","response","use","respons","status","logger","Promise","reject","httpService","get","post","put","delete","setJwt","jwt","apiEndpoint","apiUrl","tokenKey","_callee","email","password","userResponse","regenerator_default","wrap","_context","prev","next","http","sent","data","abrupt","localStorage","setItem","stop","getJwt","getItem","authService","login","_x","_x2","_login","apply","this","arguments","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","Signup","_useState","useState","_useState2","slicedToArray","setemail","_useState3","_useState4","setPassword","_useState5","_useState6","employeeName","setemployeeName","_useState7","_useState8","userError","setUserError","_useState9","_useState10","errorMessage","setErrorMessage","handleSubmit","_ref","asyncToGenerator","mark","_ref2","preventDefault","user","auth","window","location","t0","onSubmit","components_Container","components_Row","components_Col","type","placeholder","name","onChange","target","value","class","role","Login","loginError","setLoginError","passwordError","setPasswordError","HIPAA","title","content","text","questions","choices","isCorrect","userId","userTestRecords","_callee2","testRecord","userID","newTestRecord","_context2","_callee3","_context3","testService","getCurrentTests","_getCurrentTests","getTestRecords","_getTestRecords","postTestRecord","_x3","_postTestRecord","Test","currentTest","setCurrentTest","currentQuestionObject","setCurrentQuestionObject","correctAnswerCount","setCorrectAnswerCount","wrongAnswerCount","setWrongAnswerCount","startTime","setStartTime","_useState11","_useState12","questionList","setQuestionsList","_useState13","_useState14","questionError","setQuestionError","_useState15","_useState16","_useState17","_useState18","finalizeTest","setFinalizeTest","_useState19","_useState20","showModal","setShowModal","_useState21","_useState22","empSignature","setEmpSignature","empSignaturePad","shuffleFunction","testQuestions","i","length","j","Math","floor","random","scrambleOptions","currentQuestion","questionArr","push","questionAnswer","questionOptionsGood","objectSpread","questionOptionsBad","useEffect","Date","test","state","currentQuestionIndex","currentQuestionOptions","selectedAnswer","handleNext","_ref3","toConsumableArray","testQuestionText","questionText","testQuestionAnswer","testQuestionCorrect","indexOf","testQuestionBad","testQuestionExplanation","questionExplanation","handleAnswerSelect","_ref4","_ref5","currentTestScore","testScore","testPass","testStart","testFinish","testID","_id","testQuestionList","testSignature","Fragment","Modal","show","onHide","Header","closeButton","Title","Body","build_default","canvasProps","width","height","ref","onClick","clear","getTrimmedCanvas","toDataURL","mdbreact_esm","activeItem","showControls","showIndicators","interval","itemId","Hipaa","option","for","checked","Greeting","to","TableList","currentTests","testData","setTestData","testDataHold","forEach","testDate","checkTestRecord","found","foundRecord","setDate","getDate","testObject","required","testRequired","index_esm","testName","dueDate","toLocaleDateString","day","month","year","grade","actions","Link","key","pathname","testid","columns","rows","testrecord","filter","label","field","sort","esm","Provider","color","Greeting_greeting","displayEntries","noBottomColumns","searchLabel","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","TestLanding","testLoad","src","require","testImage","alt","TestView","setTestRecord","currentTestRecord","dist_default","format","diff","unit","testQuestion","index","Footer","Wrapper","Logout","Component","App","userData","setUserData","setCurrentTests","getEmployeeRecords","employeeRecords","testRecords","document","BrowserRouter","Navbar_navbar","components_Wrapper","Route","exact","path","render","TestList_testListMdb","component","pages_Test_test","TestLanding_testLanding","TestView_testView","Footer_footer","Boolean","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eaad487f.chunk.js","sourcesContent":["var map = {\n\t\"./ADLs.png\": 128,\n\t\"./HIPAA.jpg\": 129,\n\t\"./backSafety.jpg\": 130,\n\t\"./footCare.jpg\": 131,\n\t\"./handHygiene.jpg\": 132,\n\t\"./infectionControl.jpg\": 133,\n\t\"./nutrition.jpg\": 134,\n\t\"./oralHygiene.jpg\": 135,\n\t\"./preventingFalls.jpg\": 136,\n\t\"./safeTransfers.jpg\": 137,\n\t\"./sembraCareLogoTransparent1.png\": 53\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 127;","module.exports = __webpack_public_path__ + \"static/media/ADLs.cebd4dcd.png\";","module.exports = __webpack_public_path__ + \"static/media/HIPAA.53d2a587.jpg\";","module.exports = __webpack_public_path__ + \"static/media/backSafety.55bf26f4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/footCare.eac15a1e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/handHygiene.04aabdd3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/infectionControl.6598ff41.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nutrition.743a14a8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/oralHygiene.2c1d94ef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/preventingFalls.aca39956.jpg\";","module.exports = __webpack_public_path__ + \"static/media/safeTransfers.c6a5332e.jpg\";","import React from \"react\";\n\nfunction Container(props) {\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`} {...props} />;\n}\n\nexport default Container;\n","import React from \"react\";\n\nfunction Col(props) {\n  const size = props.size\n    .split(\" \")\n    .map(size => \"col-\" + size)\n    .join(\" \");\n\n  return <div className={size} {...props} />;\n}\n\nexport default Col;\n","import React from \"react\";\n\nfunction Row(props) {\n  return <div className={`row${props.fluid ? \"-fluid\" : \"\"}`} {...props} />;\n}\n\nexport default Row;\n","function init() {\n    //add init later if desired\n}\n\nfunction log(error) {\n    console.error(error);\n}\n\nexport default {\n    init,\n    log\n}","import axios from \"axios\";\nimport logger from \"./logService\";\n// import { toast } from \"react-toastify\";\n\naxios.interceptors.response.use(null, error => {\n    const expectedError = error.respons && error.response.status >= 500 && error.response.status <500;\n\n    if(!expectedError) {\n        logger.log(error);\n        // toast.error(\"An unexpected error has occurred\")\n    }\n\n    return Promise.reject(error);\n})\n\nfunction setJwt(jwt) {\n    //sets JWT from aut to avoid bi-directional \n}\n\nexport default {\n    get: axios.get,\n    post: axios.post,\n    put: axios.put,\n    delete: axios.delete,\n    setJwt\n\n}","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nconst apiEndpoint = apiUrl + \"/user\";\n\nexport function register(user) {\n    return http.post(apiEndpoint, {\n        email: user.email,\n        password: user.password,\n        employeeName: user.employeeName\n    })\n}","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\nimport jwtDecode from \"jwt-decode\"\n\nconst apiEndpoint = apiUrl + \"/auth\";\nconst tokenKey = 'token';\n\nhttp.setJwt(getJwt());\n\nexport async function login(email, password) {\n    const userResponse = await http.post(apiEndpoint, { email, password });\n\n    if (userResponse.data.error) {\n        return userResponse.data.error;\n    } else {\n        localStorage.setItem(tokenKey, userResponse.data);\n        return null;\n    }\n}\n\nexport function loginWithJwt(jwt) {\n    localStorage.setItem(tokenKey, jwt);\n}\n\nexport function logout() {\n    localStorage.removeItem(tokenKey);\n}\n\nexport function getCurrentUser() {\n    try {\n        const jwt = localStorage.getItem(tokenKey);\n        return jwtDecode(jwt);\n    } catch (ex) {\n        return null;\n    }\n}\n\nexport function getJwt() {\n    return localStorage.getItem(tokenKey);\n}\n\nexport default {\n    login,\n    loginWithJwt,\n    logout,\n    getCurrentUser,\n    getJwt\n}","import React, { useState } from \"react\";\nimport Container from \"../../components/Container\";\nimport Col from \"../../components/Col\";\nimport Row from \"../../components/Row\";\nimport * as userService from \"../../services/userService\";\nimport auth from \"../../services/authService\";\nimport \"./signup.css\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import 'bootstrap/dist/js/bootstrap.bundle.min';\n\nconst Signup = () => {\n  const [email, setemail] = useState();\n  const [password, setPassword] = useState();\n  const [employeeName, setemployeeName] = useState();\n  const [userError, setUserError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const { data: jwt } = await userService.register({\n        email: email,\n        password: password,\n        employeeName: employeeName\n      });\n\n      auth.loginWithJwt(jwt);\n      window.location = \"/\";\n\n    } catch (ex) {\n      setUserError(true);\n      setErrorMessage(ex.response.data);\n    }\n  };\n\n  return (\n    <div>\n      <h2 className=\"signup-welcome\">\n        Welcome to the SembraCare Employee Portal!\n      </h2>\n      <form className=\"signup-form text-center\" onSubmit={handleSubmit}>\n        <Container>\n          <Row className=\"signup-form-group\">\n            <Col size=\"12\">\n              <input\n                className=\"signup-form-control\"\n                type=\"text\"\n                placeholder=\"Email\"\n                name=\"email\"\n                onChange={e => setemail(e.target.value)}\n              />\n              {userError && (\n                <div class=\"alert alert-danger p-1\" role=\"alert\">\n                  <strong>{errorMessage}</strong>\n                </div>\n              )}\n            </Col>\n          </Row>\n          <Row className=\"signup-form-group\">\n            <Col size=\"12\">\n              <input\n                className=\"signup-form-control\"\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                onChange={e => setPassword(e.target.value)}\n              />\n            </Col>\n          </Row>\n          <Row className=\"signup-form-group\">\n            <Col size=\"12\">\n              <input\n                className=\"signup-form-control\"\n                type=\"text\"\n                placeholder=\"First Name\"\n                name=\"employeeName\"\n                onChange={e => setemployeeName(e.target.value)}\n              />\n            </Col>\n          </Row>\n          <button className=\"btn-submit-signup\" type=\"submit\">\n            Submit\n          </button>\n        </Container>\n        {/* <Container className=\"mt-4 personalized-greeting\">\n          <h3>Hello {employeeName}!</h3>\n          <p>I probably shouldn't tell you this, but your password is {password}!</p>\n        </Container> */}\n      </form>\n    </div>\n  );\n};\n\nexport default Signup;\n","import React, { useState } from \"react\";\nimport Container from \"../../components/Container\";\nimport Col from \"../../components/Col\";\nimport Row from \"../../components/Row\";\nimport auth from \"../../services/authService\"\nimport './login.css';\n// import '../Signup/signup.css';\n\nconst Login = () => {\n  const [email, setemail] = useState();\n  const [password, setPassword] = useState();\n  const [loginError, setLoginError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  // useEffect(() => {\n  // }, [search]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const userResponse = await auth.login(email, password);\n\n      if (userResponse) {\n        setErrorMessage(userResponse);\n        if(userResponse === \"User Not Found\")\n        {\n          setLoginError(true);\n          setPasswordError(false);\n        } else if (userResponse === \"Wrong Password for this user\") {\n          setLoginError(false);\n          setPasswordError(true);\n        } else {\n          setLoginError(true);\n          setPasswordError(true);\n        }\n      } else {\n        window.location = \"/\";\n      }\n    } catch (ex) {\n      //set error to ex\n      setErrorMessage(ex);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"login-welcome\">\n        <h2>Welcome to the SembraCare Employee Portal!</h2>\n      </div>\n      <form className=\"login-form text-center\" onSubmit={handleSubmit}>\n        <Container>\n          <Row className=\"login-form-group\">\n            <Col size=\"12\">\n              <input\n                className=\"login-form-control\"\n                type=\"text\"\n                placeholder=\"Email\"\n                name=\"email\"\n                onChange={e => setemail(e.target.value)}\n              />\n              {loginError && (\n                <div class=\"alert alert-danger p-1\" role=\"alert\">\n                  <strong>{errorMessage}</strong>\n                </div>\n              )}\n            </Col>\n          </Row>\n          <Row className=\"login-form-group\">\n            <Col size=\"12\">\n              <input\n                className=\"login-form-control\"\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                onChange={e => setPassword(e.target.value)}\n              />\n              {passwordError && (\n                <div class=\"alert alert-danger p-1\" role=\"alert\">\n                  <strong>{errorMessage}</strong>\n                </div>\n              )}\n            </Col>\n          </Row>\n          <button className=\"btn-submit-login\" type=\"submit\">\n            Submit\n          </button>\n        </Container>\n        {/* <Container className=\"mt-4 personalized-greeting\">\n          <h3>Hello {email}!</h3>\n          <p>I probably shouldn't tell you this, but your password is {password}!</p>\n        </Container> */}\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","// import TestMaterials from \"../components/Materials/Test1\";\n\n// const ADL = {\n//   titel: \"Activites of Daily Living\",\n//   content: [\n//     {\n//       text: \"Activities of daily living (often called ADLs) are basic self-care activities that are considered essential for day-to-day living. There are six activities that make up the ADLs: feeding, bathing, dressing, toileting, transferring in and out of bed and mobility. Almost 4 million adults living in households need help from someone for at least one ADL. Most of the patients you visit require some assistance with one or more of their ADLs. Some of them need less assistance and some are totally dependent. Some of your patients will never be able to be any more independent than they are, but most of your patients can improve in their abilities to perform ADLs\"\n//     },\n//     {\n//       text: \"People who have lost the ability to perform ADLs are at a much greater risk of hospitalization, nursing home placement and death than other people the same age who are independent. The percentage of people needing help with ADLs is very high among elderly homecare patients. The most frequently reported ADL limitation is bathing.\"\n//     },\n//     {\n//       text: \"There are many reasons that people receiving homecare need assistance with their ADLs. Generally speaking, patients need help performing ADLs for one of three reasons: (1) paralysis or loss of physical function, (2) weakness or decreased endurance due to disease process or surgery and (3) confusion or cognitive disorders. Some of the more common reasons you will see in homecare patients include:\"\n//     },\n//     {\n//       text: \"Recent surgery. Many times patients have reduced endurance following surgery and are not able to perform ADLs. Many of these patients will improve as you are caring for them and will become independent in several weeks.\"\n//     }, \n//     {\n//       text: \"Fractures, casts. The presence of a cast on one’s arm or leg can make it very difficult for a person to bathe him or herself or perform other ADLs without assistance. Many of these patients will also improve and when the casts are removed, they will once again be independent.\"\n//     },\n//     {\n//       text: \"Strokes. Many patients have some degree of extremity paralysis or weakness following a stroke. If the stroke is recent, the patient may be able to make a lot of progress in his or her ability to perform ADLs. However, if the stroke occurred a long time ago and the patient has had extensive therapy and has been using assistive equipment, then he or she may not have any further improvement and will never be independent.\"\n//     }, \n//     {\n//       text: \"Heart disease or chronic lung disease. These patients may have such difficulty breathing that they need assistance in ADLs. For most of these patients, performing ADLSs takes a much longer time than normal because they must rest often during activity. With better control of their symptoms, they may improve in their abilities to perform ADLs but may continue to require some assistance.\"\n//     }, \n//     {\n//       text: \"Severe arthritis. The joint stiffness and deformities of severe arthritis make it harder for these patients to perform ADLS. They may also have a great deal of pain. However, many of them may be able to show improvement if they have devices to assist them and learn different methods of bathing and dressing.\"\n//     }, \n//     {\n//       text: \"Neurological disease. Depending on the severity and involvement of the disease, patients with neurological diseases may require assistance with ADLs. In some cases (like multiple sclerosis),the diseases have periods of remission and the patient’s symptoms improve and they require less assistance. In other cases (like Alzheimer’s disease), the disease progressively worsens and the patients will not improve in their abilities to perform ADLs.\"\n//     }, \n//     {\n//       text: \"Cancer or other debilitating diseases such as AIDS. Whether or not these patients will improve depends upon the extent of their diseases and/or responses to treatments. Some patients will be able to improve while others will continually decline.\"\n//     }, \n//     {\n//       text: \"There are many things that home health aides can do to help patients improve their performance of ADLs. The key to success lies in good communication with the nurse or therapist who is seeing the patient. In addition to carefully reviewing the assignment sheet, you should talk with the nurse or therapist about how much the patient can be expected to improve and how you can best help. It is important for you to know whether the patient has already reached maximum level of functioning or whether the patient may be able to do more. It takes a team effort with the patient and family, the nurse or therapist and you to help the patient improve in performing ADLs. Some areas in which you may help include:\"\n//     }, \n\n\n//   ]\n// }\n\nconst HIPAA = {\n  title: \"HIPPA\",\n  // content is TestMaterials //\n  content: [\n    {\n      text:\n        \"The Health Insurance Portability And Accountability Act (HIPAA) was signed into law in the year 1996, by President Bill Clinton.  It is a legislation which provides security provisions and data privacy, in order to keep patients' medical informaion safe.\"\n    },\n    {\n      text:\n        \"NPP stands for Notice of Privacy Practices (US HIPAA medical patient privacy) Suggest new definition. This definition appears very frequently and is found in the following Acronym Finder categories: Military and Government\"\n    },\n    {\n      text:\n        \"National Provider Identifier Standard. This requires that every single health care entity, like employers, individuals, healthcare providers and health plans, need to have a unique 10-digit provider identifier code – their NPI (National Provider Identifier).\"\n    },\n    {\n      text:\n        \"There is no official certification program for HIPAA compliance, but many training companies offer credentials which indicate the understanding of guidelines and regulations the act specifies.\"\n    }\n  ],\n  questions: \"What does the abbreviation NPP represent in relation to HIPAA?\",\n  choices: [\n    {\n      text: \"A. Notice of Patient Practices\",\n      isCorrect: false\n    },\n    {\n      text: \"B. Notice of Privacy Practices\",\n      isCorrect: true\n    },\n    {\n      text: \"C. Notice of Potential Problems\",\n      isCorrect: false\n    },\n    {\n      text: \"D. Notice of Practice Problems\",\n      isCorrect: false\n    }\n  ]\n};\n\n\nexport const FootCare = {\n  title: \"HIPPA\",\n  // content is TestMaterials //\n  content: [\n    {\n      text:\n        \"Some random text for testing\"\n    },\n    {\n      text:\n        \"Additional random text for testing\"\n    },\n    {\n      text:\n        \"Hey......here's some more radom testing text\"\n    },\n    {\n      text:\n        \"And the final paragraph of random testing text\"\n    }\n  ],\n  questions: \"What does the abbreviation NPP represent in relation to HIPAA?\",\n  choices: [\n    {\n      text: \"A. Notice of Patient Practices\",\n      isCorrect: false\n    },\n    {\n      text: \"B. Notice of Privacy Practices\",\n      isCorrect: true\n    },\n    {\n      text: \"C. Notice of Potential Problems\",\n      isCorrect: false\n    },\n    {\n      text: \"D. Notice of Practice Problems\",\n      isCorrect: false\n    }\n  ]\n};\n\nexport default HIPAA;\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nexport async function getTestRecords(userId) {\n    const apiEndpoint = apiUrl + \"/testRecords/\" + userId;\n    const userTestRecords = await http.post(apiEndpoint);\n    return userTestRecords;\n}\n\nexport async function postTestRecord(testRecord, userID) {\n    const apiEndpoint = apiUrl + \"/addTestRecord/\" + userID;\n    const newTestRecord = await http.post(apiEndpoint,testRecord);\n    return newTestRecord;\n}\n\nexport async function getCurrentTests() {\n    const apiEndpoint = apiUrl + \"/currentTests\";\n    const userTestRecords = await http.post(apiEndpoint);\n    return userTestRecords;\n}\n\nexport default {\n    getCurrentTests,\n    getTestRecords,\n    postTestRecord,\n}","import React, { useEffect, useState } from \"react\";\nimport \"mdbreact\";\nimport {\n  MDBCarousel,\n  MDBCarouselInner,\n  MDBCarouselItem,\n  MDBView,\n  MDBContainer\n} from \"mdbreact\";\nimport { Modal } from 'react-bootstrap'\nimport Hipaa from \"../../constants/materials.js\";\nimport testService from \"../../services/testService\";\nimport SignatureCanvas from 'react-signature-canvas'\nimport \"./test.css\";\n// import ADL from '../../components/TestingTests/adl.js';\n\nconst Test = ({ location, user }) => {\n  const [currentTest, setCurrentTest] = useState();\n  const [currentQuestionObject, setCurrentQuestionObject] = useState();\n  const [correctAnswerCount, setCorrectAnswerCount] = useState();\n  const [wrongAnswerCount, setWrongAnswerCount] = useState();\n  const [startTime, setStartTime] = useState();\n  const [questionList, setQuestionsList] = useState([]);\n  const [questionError, setQuestionError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [finalizeTest, setFinalizeTest] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [empSignature, setEmpSignature] = useState(false);\n  let empSignaturePad = {};\n\n  useEffect(() => {\n    try {\n      setStartTime(new Date());\n      const test = location.state.test;\n      test.testQuestions = shuffleFunction(test.testQuestions);\n\n      setCurrentTest(test);\n      setCurrentQuestionObject({\n        currentQuestion: test.testQuestions[0],\n        currentQuestionIndex: 0,\n        currentQuestionOptions: scrambleOptions(test.testQuestions[0]),\n        selectedAnswer: \"\"\n      });\n      setCorrectAnswerCount(0);\n      setWrongAnswerCount(0);\n    } catch (ex) { }\n  }, [location]);\n\n  function shuffleFunction(testQuestions) {\n    for (let i = testQuestions.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [testQuestions[i], testQuestions[j]] = [\n        testQuestions[j],\n        testQuestions[i]\n      ];\n    }\n    return testQuestions;\n  }\n\n  function scrambleOptions(currentQuestion) {\n    let questionArr = [];\n    questionArr.push(currentQuestion.questionAnswer);\n    if (currentQuestion.questionOptionsGood.length === 1) {\n      questionArr.push(currentQuestion.questionOptionsGood[0]);\n    } else {\n      setCurrentQuestionObject({\n        ...currentQuestionObject,\n        currentQuestion: {\n          questionOptionsGood: shuffleFunction(\n            currentQuestion.questionOptionsGood\n          ),\n          questionOptionsBad: shuffleFunction(\n            currentQuestion.questionOptionsBad\n          )\n        }\n      });\n      questionArr.push(currentQuestion.questionOptionsGood[0]);\n      questionArr.push(currentQuestion.questionOptionsGood[1]);\n      questionArr.push(currentQuestion.questionOptionsBad[0]);\n    }\n    return shuffleFunction(questionArr);\n  }\n\n  const handleNext = async e => {\n    e.preventDefault();\n    setQuestionError(false);\n    const {\n      selectedAnswer,\n      currentQuestion,\n      currentQuestionIndex\n    } = currentQuestionObject;\n\n    if (selectedAnswer === \"\") {\n      setErrorMessage(\"Please select an Answer\");\n      setQuestionError(true);\n      return;\n    }\n\n    if (correctAnswerCount + wrongAnswerCount <= 10) {\n      if (selectedAnswer === currentQuestion.questionAnswer) {\n        setCorrectAnswerCount(correctAnswerCount + 1);\n        setQuestionsList([...questionList, {\n          testQuestionText: currentQuestion.questionText,\n          testQuestionAnswer: currentQuestion.questionAnswer,\n          testQuestionCorrect: true\n        }]);\n      } else {\n        setWrongAnswerCount(wrongAnswerCount + 1);\n        if (currentQuestion.questionOptionsBad.indexOf(selectedAnswer) > -1) {\n          setQuestionsList([...questionList, {\n            testQuestionText: currentQuestion.questionText,\n            testQuestionAnswer: currentQuestion.questionAnswer,\n            testQuestionCorrect: false,\n            testQuestionBad: true,\n            testQuestionExplanation: currentQuestion.questionExplanation\n          }]);\n        } else {\n          setQuestionsList([...questionList, {\n            testQuestionText: currentQuestion.questionText,\n            testQuestionAnswer: currentQuestion.questionAnswer,\n            testQuestionCorrect: false,\n            testQuestionExplanation: currentQuestion.questionExplanation\n          }]);\n        }\n      }\n    }\n\n    if (currentQuestionIndex + 1 < 10) {\n      setCurrentQuestionObject({\n        currentQuestionIndex: currentQuestionIndex + 1,\n        currentQuestion: currentTest.testQuestions[currentQuestionIndex + 1],\n        currentQuestionOptions: scrambleOptions(\n          currentTest.testQuestions[currentQuestionIndex + 1]\n        ),\n        selectedAnswer: \"\"\n      });\n    } else {\n      setFinalizeTest(true);\n    }\n  };\n\n  const handleAnswerSelect = async e => {\n    setCurrentQuestionObject({\n      ...currentQuestionObject,\n      selectedAnswer: e.target.value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const currentTestScore =\n        (correctAnswerCount / (correctAnswerCount + wrongAnswerCount)) * 100;\n      const testRecord = {\n        testScore: currentTestScore,\n        testPass: currentTestScore >= 70,\n        testStart: startTime,\n        testFinish: new Date(),\n        testID: currentTest._id,\n        testQuestionList: questionList,\n        testSignature: empSignature\n      };\n      testService.postTestRecord(testRecord, user.id);\n\n      window.location = \"/\";\n    } catch (ex) {\n      if (ex.response) {\n        setErrorMessage(ex.response.data);\n        setQuestionError(true);\n      }\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  }\n  const openModal = () => {\n    setShowModal(true);\n  }\n  const signatureClear = () => {\n    empSignaturePad.clear();\n  }\n\n  const signatureSave = () => {\n    setEmpSignature(empSignaturePad.getTrimmedCanvas().toDataURL('image/png'));\n    setShowModal(false);\n  }\n\n  return (\n    <React.Fragment>\n      <Modal className=\"modal\" show={showModal} onHide={closeModal}>\n        <Modal.Header closeButton>\n          <Modal.Title className=\"modal-title\">Employee Signature:</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"text-center\">\n          <SignatureCanvas canvasProps={{ width: 300, height: 200, className: 'sigCanvas' }} ref={(ref) => { empSignaturePad = ref }} />\n          <button class=\"modal-clear-btn\" onClick={signatureClear}>Clear</button>\n          <button class=\"modal-save-btn\" onClick={signatureSave}>Save</button>\n        </Modal.Body>\n      </Modal>\n\n      <MDBContainer className=\"carousel-container\">\n        {/* <h1 className=\"title\">{Hipaa.title}</h1> */}\n        <MDBCarousel\n          className=\"z-depth-1 carousel\"\n          activeItem={1}\n          length={2}\n          showControls={false}\n          showIndicators={true}\n          interval={false}\n        >\n          <div className=\"carousel-content\">\n            <MDBCarouselInner>\n              <MDBCarouselItem itemId=\"1\">\n                <MDBView>\n                  <div>\n                    {Hipaa.content.map(p => (\n                      <p>{p.text}</p>\n                    ))}\n                  </div>\n                </MDBView>\n              </MDBCarouselItem>\n              <MDBCarouselItem itemId=\"2\">\n                {currentQuestionObject && (\n                  <MDBView>\n                    <h3>{currentQuestionObject.currentQuestion.questionText}</h3>\n                    {currentQuestionObject.currentQuestionOptions.map(option => {\n                      return (\n                        <React.Fragment>\n                          <hr />\n                          <label className=\"radio-inline\" for={option}>\n                            <input\n                              id={option}\n                              type=\"radio\"\n                              name=\"currentAnswers\"\n                              value={option}\n                              checked={\n                                currentQuestionObject.selectedAnswer === option\n                              }\n                              onChange={handleAnswerSelect}\n                            />\n                            {option}\n                          </label>\n                        </React.Fragment>\n                      );\n                    })}\n                    <hr />\n                    {questionError && (\n                      <div class=\"alert alert-danger p-1\" role=\"alert\">\n                        <strong>{errorMessage}</strong>\n                      </div>\n                    )}\n                    {!finalizeTest && (\n                      <button className=\"btn-next\" onClick={handleNext}>\n                        Next\n                      </button>\n                    )}\n                    {finalizeTest && !empSignature && (\n                      <React.Fragment>\n                        <h6 className=\"you-scored\">\n                          You scored a:{\" \"}\n                          {(100 * correctAnswerCount) /\n                            (correctAnswerCount + wrongAnswerCount)}\n                          %\n                        </h6>\n                        <button className=\"btn-next\" onClick={openModal}>\n                          Finish Test\n                        </button>\n                      </React.Fragment>\n                    )}\n                    {empSignature && <button className=\"btn-submit\" onClick={handleSubmit}>Submit Test {(100 * correctAnswerCount) /\n                            (correctAnswerCount + wrongAnswerCount)}%</button>}\n                  </MDBView>\n                )}\n              </MDBCarouselItem>\n              {/* <MDBCarouselItem itemId=\"3\">\n                 <ADL />\n              </MDBCarouselItem> */}\n            </MDBCarouselInner>\n          </div>\n        </MDBCarousel>\n      </MDBContainer>\n    </React.Fragment>\n  );\n};\n\nexport default Test;\n","import React from \"react\";\nimport \"./greeting.css\"\n\nconst Greeting = ({ user }) => {\n  return (\n    <div className=\"greeting text-center\" to=\"/\">\n      {/* <p>{user && \"SembraCare Portal - Hello \" + user.employeeName}\n        {!user && \"SembraCare Portal\"}</p> */}\n      {/* <h2 className=\"greeting\">{user && \"SembraCare Portal\"}</h2> */}\n      <h2 className=\"greeting text-center\">\n        {user && \"Hello \" + user.employeeName + \"!\"}\n      </h2>\n      <h2>{!user && \"SembraCare Portal\"}</h2>\n    </div>\n  );\n};\n\nexport default Greeting;\n","import React, { useState, useEffect } from 'react';\nimport { MDBDataTable } from 'mdbreact';\nimport { FaExclamationCircle } from \"react-icons/fa\";\nimport { IconContext } from \"react-icons\";\nimport Greeting from \"../../components/Greeting/greeting\";\nimport { Link } from \"react-router-dom\";\nimport \"./testListMdb.css\"\n\nconst TableList = ({ user, currentTests }) => {\n  const [testData, setTestData] = useState();\n  console.log(currentTests);\n\n  useEffect(() => {\n    try {\n      console.log(\"Creating Test Data\")\n      let testDataHold = [];\n      if (currentTests) {\n        currentTests.forEach(test => {\n          let testRecord = checkTestRecord(test);\n          let testDate;\n          if (testRecord.found) {\n            testDate = new Date(testRecord.foundRecord[0].testFinish)\n            testDate.setDate(testDate.getDate() + 364);\n          }\n          console.log(testRecord)\n          let testObject = {\n            required: test.testRequired ? <FaExclamationCircle /> : '',\n            name: test.testName,\n            dueDate: test.testRequired ? testRecord.found\n              ? testDate.toLocaleDateString('en-US', { day: \"numeric\", month: \"numeric\", year: \"2-digit\" }) : '1/1/21' : '-',\n            grade: testRecord.found ? testRecord.foundRecord[0].testScore + \"%\" : \"-\",\n            actions: testRecord.found ? <Link key={test._id + \"link1\"} to={{\n              pathname: \"/testView\",\n              state: { testid: test._id }\n            }}\n              className=\"btnLink\"\n            >\n              <button\n                key={test._id + \"btn1\"}\n                className=\"btn btn-success\"\n              >\n              {/* View\n              <br/> */}\n                {testRecord.foundRecord[0].testScore + \"%\"}\n                \n          </button>\n            </Link> : <Link\n              key={test._id + \"link2\"}\n              to={{\n                pathname: \"/testLanding\",\n                state: { testid: test._id }\n              }}\n              className=\"btnLink\"\n            >\n                <button\n                  key={test._id + \"btn2\"}\n                  className=\"btn btn-primary open-test-button\"\n                >\n                  Start\n                                </button>\n              </Link>\n          };\n          testDataHold.push(testObject);\n        });\n        setTestData({ columns: data.columns, rows: testDataHold });\n        console.log({ columns: data.columns, rows: testDataHold });\n      }\n    } catch (ex) { }\n  }, [user, currentTests]);\n\n  const checkTestRecord = test => {\n    const foundRecord = user.testrecord.filter(testRecord => {\n      return testRecord.testID === test._id;\n    });\n    return { found: foundRecord.length > 0, foundRecord: foundRecord };\n  };\n\n\n\n  const data = {\n    columns: [\n      {\n        label: '',\n        field: 'required',\n        width: 20\n      },\n      {\n        label: 'Name',\n        field: 'name',\n        sort: 'asc',\n        width: 150\n      },\n      {\n        label: 'DueDate',\n        field: 'dueDate',\n        sort: 'asc',\n        width: 100\n      },\n      // {\n      //   label: 'Grade',\n      //   field: 'grade',\n      //   sort: 'asc',\n      //   width: 100\n      // },\n      {\n        label: '',\n        field: 'actions',\n        sort: 'asc',\n        width: 100\n      }\n    ],\n    rows: [\n      {\n        required: 'Michael Bruce',\n        name: 'Javascript Developer',\n        dueDate: 'Singapore',\n        actions: '29'\n      }\n    ]\n  };\n\n  return (\n    <IconContext.Provider value={{ color: \"red\", size: \"1.5em\", className: \"global-class-name\" }}>\n      <React.Fragment>\n        <Greeting className=\"greeting\" user={user} />\n        <MDBDataTable\n          data={testData}\n          className=\"bg-light mb-5 pt-2 text-center test-view-table\"\n          displayEntries={false}\n          noBottomColumns=\"false\"\n          searchLabel=\"Search Test\"\n        />\n      </React.Fragment>\n    </IconContext.Provider>\n  );\n}\n\nexport default TableList;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./navbar.css\";\n\nconst NavBar = ({ user }) => {\n  return (\n    <nav className=\"custom-navbar navbar-light justify-content-left\">\n      <button\n        className=\"navbar-toggler custom-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarSupportedContent15\"\n        aria-controls=\"navbarSupportedContent15\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent15\">\n        <ul className=\"navbar-nav text-center\">\n          {/* <li className=\"nav-item\">\n            <Link\n              to=\"/\"\n              className={\n                window.location.pathname === \"/\" ||\n                window.location.pathname === \"/home\"\n                  ? \"nav-link active\"\n                  : \"nav-link\"\n              }\n            >\n              Home\n            </Link>\n          </li> */}\n          {!user && (\n            <React.Fragment>\n              <li\n                className=\"nav-item\"\n                data-toggle=\"collapse\"\n                data-target=\".navbar-collapse.show\"\n              >\n                <Link\n                  to=\"/signup\"\n                  className={\n                    window.location.pathname === \"/signup\"\n                      ? \"nav-link active\"\n                      : \"nav-link\"\n                  }\n                >\n                  Sign Up\n                </Link>\n              </li>\n              <li\n                className=\"nav-item\"\n                data-toggle=\"collapse\"\n                data-target=\".navbar-collapse.show\"\n              >\n                <Link\n                  to=\"/login\"\n                  className={\n                    window.location.pathname === \"/login\"\n                      ? \"nav-link active\"\n                      : \"nav-link\"\n                  }\n                >\n                  Log In\n                </Link>\n              </li>\n            </React.Fragment>\n          )}\n          {user && (\n            <React.Fragment>\n              <li\n                className=\"nav-item\"\n                data-toggle=\"collapse\"\n                data-target=\".navbar-collapse.show\"\n              >\n                <Link\n                  to=\"/logout\"\n                  className={\n                    window.location.pathname === \"/logout\"\n                      ? \"nav-link active\"\n                      : \"nav-link\"\n                  }\n                >\n                  Log Out\n                </Link>\n              </li>\n              <li\n                className=\"nav-item\"\n                data-toggle=\"collapse\"\n                data-target=\".navbar-collapse.show\"\n              >\n                <Link\n                  to=\"/testlist\"\n                  className={\n                    window.location.pathname === \"/testlist\"\n                      ? \"nav-link active\"\n                      : \"nav-link\"\n                  }\n                >\n                  Test List\n                </Link>\n              </li>\n            </React.Fragment>\n          )}\n        </ul>\n      </div>\n    </nav>\n\n    // {/* <Link className=\"navbar-brand\" to=\"/\">\n    //   {/* <p>{user && \"SembraCare Portal - Hello \" + user.employeeName}\n    //   {!user && \"SembraCare Portal\"}</p> */}\n    //   <p>{user && \"SembraCare Portal\"}</p>\n    //     <p className=\"text-center\">{user && \"Hello \" + user.employeeName + \"!\"}</p>\n    //   <p>{!user && \"SembraCare Portal\"}</p>\n    // </Link> */}\n  );\n};\n\nexport default NavBar;\n","import React, { useEffect, useState } from \"react\";\nimport \"./testLanding.css\";\nimport Container from \"../../components/Container\";\nimport Col from \"../../components/Col\";\nimport Row from \"../../components/Row\";\nimport { Link } from \"react-router-dom\";\nimport { FaRegHandPointLeft } from \"react-icons/fa\";\nimport { FaRegHandPointRight } from \"react-icons/fa\";\nimport { IconContext } from \"react-icons\";\n\nconst TestLanding = ({ location, currentTests, user }) => {\n  const [currentTest, setCurrentTest] = useState();\n\n  useEffect(() => {\n    try {\n      let testLoad = currentTests.filter(test => {\n        return test._id === location.state.testid;\n      });\n      console.log(testLoad[0]);\n      setCurrentTest(testLoad[0]);\n    } catch (ex) {}\n  });\n\n  return (\n    <Container>\n      <Row className=\"text-center\">\n        {currentTest && (\n          <Col size=\"12\">\n            <img\n              className=\"img img\"\n              src={require(\"../../images/\" + currentTest.testImage)}\n              alt=\"test image\"\n            ></img>\n            {/* <hr /> */}\n          </Col>\n        )}\n      </Row>\n        {currentTest && (\n            <h2 className=\"text-center test-landing-title\">{currentTest.testName}</h2>\n        )}\n      <IconContext.Provider\n        value={{ color: \"blue\", size: \"2em\", className: \"global-class-name\" }}\n      >\n        <Row>\n          {currentTest && (\n            <Col size=\"12\" className=\"instructions-container\">\n              <h4 className=\"text-center\">Test Instructions</h4>\n              <ul className=\"bg-white instructions-ul\">\n                <li>This is an Open Book Test</li>\n                <li>\n                  Swipe Left <FaRegHandPointLeft /> to View the Test Screen\n                </li>\n                <li>\n                  Swipe Right <FaRegHandPointRight /> to View the Handout\n                </li>\n                <p className=\"font-weight-bold font-italic\">\n                  (You can Toggle Between the Two Screens Throughout the Exam)\n                </p>\n                <li>There are 10 Questions</li>\n                <li>You Must Answer 7 Correct to Pass</li>\n                <li>\n                  At the End of the Exam, Sign Your Name in the Signature Box to\n                  Post Your Results\n                </li>\n              </ul>\n              {/* <hr /> */}\n            </Col>\n          )}\n        </Row>\n      </IconContext.Provider>\n      <Row>\n        <Col size=\"12\">\n          <Link\n            to={{ pathname: \"/test\", state: { test: currentTest } }}\n            className=\"btnLink\"\n          >\n            <button \n            className=\"btn btn-primary test-start-button \">Start Test</button>\n          </Link>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default TestLanding;\n","import React, { useEffect, useState } from \"react\";\nimport \"./testView.css\";\nimport Container from \"../../components/Container\";\nimport Col from \"../../components/Col\";\nimport Row from \"../../components/Row\";\nimport Moment from \"react-moment\";\n\nconst TestView = ({ location, currentTests, user }) => {\n  const [currentTest, setCurrentTest] = useState();\n  const [testRecord, setTestRecord] = useState();\n\n  useEffect(() => {\n    try {\n      let testLoad = currentTests.filter(test => {\n        return test._id === location.state.testid;\n      });\n      setCurrentTest(testLoad[0]);\n\n      let currentTestRecord = user.testrecord.filter(test => {\n        return test.testID === location.state.testid;\n      });\n      setTestRecord(currentTestRecord[0]);\n\n      console.log(testLoad);\n      console.log(currentTestRecord);\n    } catch (ex) { }\n  });\n\n  return (\n    <Container className=\"summary-container\">\n      {currentTest && <h2 className=\"text-center test-title\">{currentTest.testName}</h2>}\n      <Row className=\"text-center\">\n        {currentTest && (\n          <Col size=\"12\" className=\"test-summary\">\n            {/* <hr /> */}\n            <h3 className=\"text-center\">Test Score: {testRecord.testScore}%</h3>\n            <h3>\n              Completed On:{\" \"}\n              <Moment format=\"MM/DD/YY\">{testRecord.testFinish}</Moment>\n            </h3>\n            <h3>\n              Total Test Time:{\" \"}\n              <Moment diff={testRecord.testStart} unit=\"m\">\n                {testRecord.testFinish}\n              </Moment>{\" \"}\n              minutes\n            </h3>\n            <img\n              src={testRecord.testSignature}\n              alt=\"signature\"\n              className=\"bg-white signature-image\"\n            />\n            {/* <hr /> */}\n          </Col>\n        )}\n      </Row>\n      {testRecord && (\n        <Row className=\"text-center\">\n          <Col size=\"12\" className=\"test-answer-explanations\">\n            {testRecord.testQuestionList.map((testQuestion, index) => {\n              console.log(testQuestion);\n              return (\n                <div\n                  id=\"question-explanation\"\n                  className={\n                    !testQuestion.testQuestionCorrect\n                      ? \"text-danger\"\n                      : \"text-dark\"\n                  }\n                >\n                  <p>\n                    {index + 1} - {testQuestion.testQuestionText}\n                  </p>\n                  <p>\n                    <strong>Correct Answer:</strong>{\" \"}\n                    {testQuestion.testQuestionAnswer}\n                  </p>\n                  {!testQuestion.testQuestionCorrect && (\n                    <p>\n                      <strong>Explanation: </strong>\n                      {testQuestion.testQuestionExplanation}\n                    </p>\n                  )}\n                  {/* <hr /> */}\n                </div>\n              );\n            })}\n          </Col>\n        </Row>\n      )}\n    </Container>\n  );\n};\n\nexport default TestView;\n","import React from \"react\";\nimport \"./footer.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      {/* <p className=\"footer-title\">SembraCare Logo</p> */}\n      <img\n        className=\"footer-img\"\n        src={require(\"../../images/sembraCareLogoTransparent1.png\")}\n      ></img>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport \"./style.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import $ from 'jquery';\n// import Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props} />;\n}\n\nexport default Wrapper;\n","import { Component } from \"react\";\nimport auth from \"../../services/authService\";\n\nclass Logout extends Component {\n  componentDidMount() {\n    auth.logout();\n    window.location = \"/Login\";\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default Logout;\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Signup from \"./pages/Signup/signup\";\nimport Login from \"./pages/Login/login\";\nimport Test from \"./pages/Test/test\";\n// import TestList from \"./pages/TestList/testList\";\nimport TableList from \"./pages/TestList/testListMdb\"\nimport Navbar from \"./components/Navbar/navbar.js\";\nimport TestLanding from \"./pages/TestLanding/testLanding\";\nimport TestView from \"./pages/TestView/testView\"\nimport Footer from \"./components/Footer/footer\";\nimport Wrapper from \"./components/Wrapper\";\nimport Logout from \"./components/Logout/logout\";\nimport auth from \"./services/authService\";\nimport testRecords from \"./services/testService\";\nimport \"./App.css\";\n\nfunction App() {\n  const [userData, setUserData] = useState();\n  const [currentTests, setCurrentTests] = useState();\n\n  useEffect(() => {\n    const user = auth.getCurrentUser();\n    if (user) {\n      getEmployeeRecords(user);\n      getCurrentTests();\n    }\n  },[]);\n\n  const getEmployeeRecords = async user => {\n    const { data: employeeRecords } = await testRecords.getTestRecords(user.id);\n    setUserData(employeeRecords);\n  };\n\n  const getCurrentTests = async () => {\n    const { data: currentTests } = await testRecords.getCurrentTests();\n    setCurrentTests(currentTests);\n  };\n\n  document.title = \"SembraCare Test Portal\";\n  return (\n    <Router>\n      <div>\n        {userData && <Navbar user={userData} />}\n        <Wrapper>\n          {userData && (\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <TableList\n                  {...props}\n                  user={userData}\n                  currentTests={currentTests}\n                />\n              )}\n            />\n          )}\n          {!userData && <Route exact path=\"/\" component={Login} />}\n          <Route\n            exact\n            path=\"/test\"\n            render={props => (\n              <Test {...props} user={userData} />\n            )}\n          />\n          <Route\n            exact\n            path=\"/testLanding\"\n            render={props => (\n              <TestLanding {...props} user={userData} currentTests={currentTests} />\n            )}\n          />\n          <Route\n            exact\n            path=\"/testView\"\n            render={props => (\n              <TestView {...props} user={userData} currentTests={currentTests} />\n            )}\n          />\n          <Route exact path=\"/signup\" component={Signup} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route\n            exact\n            path=\"/testlist\"\n            render={props => (\n              <TableList\n                {...props}\n                user={userData}\n                currentTests={currentTests}\n              />\n            )}\n          />\n          <Route exact path=\"/logout\" component={Logout} />\n        </Wrapper>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/sembraCareLogoTransparent1.2787ef86.png\";"],"sourceRoot":""}